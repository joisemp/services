# Generated by Django 5.2 on 2025-07-15 05:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_alter_spaces_unique_together_and_more'),
        ('service_management', '0008_auto_20250707_2206'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Spaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(unique=True)),
                ('is_access_enabled', models.BooleanField(default=True, help_text='Enable/disable access to this space')),
                ('require_approval', models.BooleanField(default=False, help_text='Require admin approval for new space admins')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_spaces', to=settings.AUTH_USER_MODEL)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spaces', to='core.organisation')),
                ('space_admins', models.ManyToManyField(blank=True, help_text='Users who can administer this space', limit_choices_to={'profile__user_type': 'space_admin'}, related_name='administered_spaces', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Space',
                'verbose_name_plural': 'Spaces',
                'unique_together': {('name', 'org')},
            },
        ),
        migrations.CreateModel(
            name='SpaceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_issue_management', models.BooleanField(default=True, help_text='Enable/disable issue management')),
                ('enable_service_management', models.BooleanField(default=True, help_text='Enable/disable service management')),
                ('enable_transportation', models.BooleanField(default=False, help_text='Enable/disable transportation')),
                ('enable_dashboard', models.BooleanField(default=True, help_text='Enable/disable dashboard')),
                ('require_issue_approval', models.BooleanField(default=False, help_text='Require admin approval for new issues')),
                ('enable_issue_comments', models.BooleanField(default=True, help_text='Enable comments on issues')),
                ('enable_issue_attachments', models.BooleanField(default=True, help_text='Allow file attachments on issues')),
                ('enable_service_requests', models.BooleanField(default=True, help_text='Enable service request functionality')),
                ('enable_service_purchases', models.BooleanField(default=False, help_text='Enable service purchase functionality')),
                ('enable_service_upgrades', models.BooleanField(default=False, help_text='Enable service upgrade functionality')),
                ('auto_assign_maintainers', models.BooleanField(default=False, help_text='Automatically assign maintainers to services')),
                ('enable_transport_booking', models.BooleanField(default=False, help_text='Enable transportation booking')),
                ('require_transport_approval', models.BooleanField(default=True, help_text='Require approval for transport bookings')),
                ('max_advance_booking_days', models.PositiveIntegerField(default=30, help_text='Maximum days in advance for booking')),
                ('email_notifications', models.BooleanField(default=True, help_text='Enable email notifications')),
                ('sms_notifications', models.BooleanField(default=False, help_text='Enable SMS notifications')),
                ('in_app_notifications', models.BooleanField(default=True, help_text='Enable in-app notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('space', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='service_management.spaces')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_space_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Space Settings',
                'verbose_name_plural': 'Space Settings',
            },
        ),
    ]
