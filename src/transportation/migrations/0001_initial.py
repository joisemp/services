# Generated by Django 5.2 on 2025-07-10 05:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Make',
                'verbose_name_plural': 'Vehicle Makes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('car', 'Car'), ('truck', 'Truck'), ('motorcycle', 'Motorcycle'), ('bus', 'Bus'), ('van', 'Van'), ('suv', 'SUV'), ('bicycle', 'Bicycle'), ('scooter', 'Scooter'), ('trailer', 'Trailer'), ('other', 'Other')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='License plate can only contain letters, numbers, hyphens, and spaces', regex='^[A-Z0-9\\-\\s]+$')])),
                ('vin', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='VIN must be exactly 17 characters and cannot contain I, O, or Q', regex='^[A-HJ-NPR-Z0-9]{17}$')], verbose_name='VIN (Vehicle Identification Number)')),
                ('year', models.IntegerField()),
                ('color', models.CharField(max_length=50)),
                ('engine_capacity', models.DecimalField(blank=True, decimal_places=1, help_text='Engine capacity in liters', max_digits=4, null=True)),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'Compressed Natural Gas'), ('lpg', 'Liquefied Petroleum Gas'), ('hydrogen', 'Hydrogen'), ('other', 'Other')], max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('cvt', 'CVT'), ('semi_automatic', 'Semi-Automatic')], max_length=20)),
                ('mileage', models.IntegerField(default=0, help_text='Current mileage/odometer reading')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('retired', 'Retired'), ('sold', 'Sold'), ('damaged', 'Damaged'), ('stolen', 'Stolen')], default='active', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('insurance_company', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_expiry', models.DateField(blank=True, null=True)),
                ('registration_expiry', models.DateField(blank=True, null=True)),
                ('last_service_date', models.DateField(blank=True, null=True)),
                ('next_service_due', models.DateField(blank=True, null=True)),
                ('service_interval_km', models.IntegerField(blank=True, help_text='Service interval in kilometers', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_company_vehicle', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_vehicles', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Service'), ('repair', 'Repair'), ('inspection', 'Inspection'), ('oil_change', 'Oil Change'), ('tire_change', 'Tire Change/Rotation'), ('brake_service', 'Brake Service'), ('battery', 'Battery Service'), ('transmission', 'Transmission Service'), ('other', 'Other')], max_length=20)),
                ('date', models.DateField()),
                ('mileage_at_service', models.IntegerField()),
                ('description', models.TextField()),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('next_service_due_date', models.DateField(blank=True, null=True)),
                ('next_service_due_mileage', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='transportation.vehicle')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('engine', 'Engine'), ('transmission', 'Transmission'), ('brakes', 'Brakes'), ('suspension', 'Suspension'), ('electrical', 'Electrical'), ('body', 'Body'), ('interior', 'Interior'), ('tires', 'Tires'), ('exhaust', 'Exhaust'), ('fuel_system', 'Fuel System'), ('cooling', 'Cooling System'), ('steering', 'Steering'), ('lighting', 'Lighting'), ('safety', 'Safety Equipment'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_critical', models.BooleanField(default=False, help_text='Critical components require immediate attention when issues arise')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Component',
                'verbose_name_plural': 'Vehicle Components',
                'ordering': ['category', 'name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='VehicleComponentInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('part_number', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('model_number', models.CharField(blank=True, max_length=100, null=True)),
                ('installation_date', models.DateField(blank=True, null=True)),
                ('installation_mileage', models.IntegerField(blank=True, null=True)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('expected_lifespan_km', models.IntegerField(blank=True, help_text='Expected lifespan in kilometers', null=True)),
                ('expected_lifespan_months', models.IntegerField(blank=True, help_text='Expected lifespan in months', null=True)),
                ('current_status', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical'), ('replaced', 'Replaced'), ('removed', 'Removed')], default='good', max_length=20)),
                ('last_inspection_date', models.DateField(blank=True, null=True)),
                ('next_inspection_due', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='transportation.vehiclecomponent')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_instances', to='transportation.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Component Instance',
                'verbose_name_plural': 'Vehicle Component Instances',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComponentInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateField()),
                ('inspection_type', models.CharField(help_text='Type of inspection (routine, pre-trip, annual, etc.)', max_length=100)),
                ('result', models.CharField(choices=[('passed', 'Passed'), ('warning', 'Warning - Monitor Closely'), ('failed', 'Failed - Requires Action'), ('critical', 'Critical - Immediate Action Required')], max_length=20)),
                ('condition_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], help_text='Condition rating from 1 (poor) to 10 (excellent)')),
                ('findings', models.TextField(help_text='Detailed findings from the inspection')),
                ('recommendations', models.TextField(blank=True, help_text='Recommended actions', null=True)),
                ('next_inspection_due', models.DateField(blank=True, null=True)),
                ('photos', models.FileField(blank=True, help_text='Photos from inspection', null=True, upload_to='component_inspections/%Y/%m/')),
                ('mileage_at_inspection', models.IntegerField(blank=True, null=True)),
                ('estimated_remaining_life', models.IntegerField(blank=True, help_text='Estimated remaining life in kilometers', null=True)),
                ('replacement_urgency', models.CharField(blank=True, choices=[('immediate', 'Immediate'), ('within_week', 'Within 1 Week'), ('within_month', 'Within 1 Month'), ('within_quarter', 'Within 3 Months'), ('within_year', 'Within 1 Year'), ('routine', 'At Next Routine Maintenance')], max_length=20, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('component_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='transportation.vehiclecomponentinstance')),
            ],
            options={
                'verbose_name': 'Component Inspection',
                'verbose_name_plural': 'Component Inspections',
                'ordering': ['-inspection_date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('registration', 'Registration Certificate'), ('insurance', 'Insurance Policy'), ('permit', 'Permit'), ('license', 'Driver License'), ('inspection', 'Inspection Certificate'), ('warranty', 'Warranty Document'), ('manual', 'User Manual'), ('receipt', 'Purchase Receipt'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('document_file', models.FileField(upload_to='vehicle_documents/%Y/%m/')),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='transportation.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Document',
                'verbose_name_plural': 'Vehicle Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('vehicle_update', 'Vehicle Information Updated'), ('component_added', 'Component Added'), ('component_updated', 'Component Updated'), ('component_replaced', 'Component Replaced'), ('component_removed', 'Component Removed'), ('maintenance_performed', 'Maintenance Performed'), ('inspection_completed', 'Inspection Completed'), ('status_changed', 'Status Changed'), ('ownership_transferred', 'Ownership Transferred'), ('other', 'Other')], max_length=30)),
                ('field_changed', models.CharField(blank=True, help_text='Name of the field that was changed', max_length=100, null=True)),
                ('old_value', models.TextField(blank=True, help_text='Previous value before change', null=True)),
                ('new_value', models.TextField(blank=True, help_text='New value after change', null=True)),
                ('description', models.TextField(help_text='Description of what was changed')),
                ('change_reason', models.TextField(blank=True, help_text='Reason for the change', null=True)),
                ('mileage_at_change', models.IntegerField(blank=True, null=True)),
                ('cost_impact', models.DecimalField(blank=True, decimal_places=2, help_text='Cost associated with this change', max_digits=10, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('maintenance_record', models.ForeignKey(blank=True, help_text='Related maintenance record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='transportation.maintenancerecord')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to='transportation.vehicle')),
                ('component_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to='transportation.vehiclecomponentinstance')),
                ('reference_document', models.ForeignKey(blank=True, help_text='Related document for this change', null=True, on_delete=django.db.models.deletion.SET_NULL, to='transportation.vehicledocument')),
            ],
            options={
                'verbose_name': 'Vehicle Change Log',
                'verbose_name_plural': 'Vehicle Change Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year_introduced', models.IntegerField(blank=True, null=True)),
                ('year_discontinued', models.IntegerField(blank=True, null=True)),
                ('engine_types', models.CharField(blank=True, help_text='e.g., Gasoline, Diesel, Electric, Hybrid', max_length=200, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='transportation.vehiclemake')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='transportation.vehicletype')),
            ],
            options={
                'verbose_name': 'Vehicle Model',
                'verbose_name_plural': 'Vehicle Models',
                'ordering': ['make__name', 'name'],
                'unique_together': {('make', 'name')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='transportation.vehiclemodel'),
        ),
    ]
